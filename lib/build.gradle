description = "Sub project regrouping each 'unitary' jar."

subprojects {

    apply plugin: "java-library"
    apply plugin: "idea"
    apply plugin: "maven-publish"

    publishing {

        repositories {
            maven {
                name = 'NexusDocker'

                def releasesRepoUrl = "http://localhost:8081/nexus/content/repositories/releases/"
                def snapshotsRepoUrl = "http://localhost:8081/nexus/content/repositories/snapshots/"

                def repoUrl = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = repoUrl

                credentials {
                    username "admin"
                    password "admin123"
                }
            }
        }

        repositories {
            maven {
                name = 'LocalRepo'
                url = "file://${rootDir}/repo"
            }
        }
    }

    dependencies{
        testImplementation "junit:junit:4+"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

//task publishToLocalRepository {
//    group = 'publishing'
//    description = 'Publishes all Maven publications to the internal Maven repository.'
//    dependsOn tasks.withType(PublishToMavenLocal)
//    dependsOn subprojects.collect { it.tasks.withType(PublishToMavenLocal) }
//}

//task publishToTestRepository {
//    group = 'publishing'
//    description = 'Publishes all Maven publications to the test (project root) Maven repository.'
//    dependsOn tasks.withType(PublishToMavenRepository)
//    dependsOn subprojects.collect {it.tasks.withType(PublishToMavenRepository) }
//}



